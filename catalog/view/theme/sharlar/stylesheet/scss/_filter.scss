
.filter-category{
	display: flex;
    justify-content: space-between;
	padding:15px 20px;
    border-bottom: 1px solid var(--green-light);
    & a{
        font-size:20px;
        color:$mainBlack;
    }
}
.filter-search{
display: flex;
justify-content: center;
align-items: center;
padding:10px 0;
    & .filter-search-btn{
        font-size:20px;
        background:none;
        padding:10px 0;
        background:var(--main-green);
        color:#fff;
        border:2px solid var(--green-light);
        border-radius: 15px;
        width:98%;
        transition: all .2s ease;
        &:hover{
            background:#fff;
            color:var(--main-green);
            }
    }
}


.mobile-filter-menu{
	display:none;
}
.show-filter {
	padding: 10px 20px;
	border:none;	
	border-radius: 15px;
	z-index: 20;
}
.close-filter{
	display: inline-block;
	background:none;
	border:none;
	text-align:right;
    outline: none;
    & i{
        font-size:40px;
        margin-right:15px;
        transition:transform .3s ease-in-out;
        &:hover{
            transform: scale(1.1);
        }
    }
}
.show-filter {
    & i {
        font-size:20px;
    }
    &:focus{
        outline: none;
    }
}

@media screen and ( min-width:1200px ) {
    .filter-wrapper{
      display:flex;
      width:25%;
    }
	.left-col{
        width:100%;
        max-height:97vh;
        position: sticky;
        top: 61px;
        align-self: flex-start;
        overflow-y:auto;
	}
	.input-el-wrapper{
		display: flex;
		justify-content: space-around;
	}
	.input-el{
		width:25%;
	}
	.close-filter{
		display:none;
	}
}

@media screen and ( max-width:1200px ) {
	.mobile-filter-menu{
		display:flex;
		justify-content: space-between;
	}
	.left-col{
		width:95%;
		margin:0 auto;
	}
	.input-el-wrapper{
		display: flex;
		flex-direction: column;
		
	}
	.input-el{
		width:90%;
		margin: 0 auto;
	}

.filter-wrapper{
    position:fixed;
    top:50%;
    transform:translate(-110%,-50%);
    left:0;
    display:flex;
    flex-direction: column;
    justify-content: space-around;
    width:320px;
    height:92vh;
    background-color:$mainWhite;
    border:2px solid $mainGreen;
    border-radius: 100%;
    box-shadow:$shadow;
    transition: all .5s ease-in-out;

    overflow-y:auto;
    
    z-index: 90;
    
}
.filter-background{
  	position: fixed;
	left:0;
	top:0;
	height:100vh;
	width: 100vw;
	background:transparent;
	z-index: 89;
	display:none;

}
.close-filter{
    display:block;
}
}

@media screen and ( max-width:376px ) {
.filter-wrapper{
    width:100vw;
}
}
.filters{
    list-style: none;
}
.filters-item{
    cursor:pointer;
}
.collapsein{
    display: none;
}
/*checkbox*/
.checkbox-container {
display: block;
position: relative;
padding:5px 0;
margin-bottom: 12px;
cursor: pointer;
/* font-size: 22px; */
-webkit-user-select: none;
-moz-user-select: none;
-ms-user-select: none;
user-select: none;
}

/* Hide the browser's default checkbox */
.checkbox-container input {
position: absolute;
opacity: 0;
cursor: pointer;
height: 0;
width: 0;

}
.input-inner{
  margin-left:25px;
}
/* Create a custom checkbox */
.checkmark {
position: absolute;
top: 0;
left: 0;
height: 25px;
width: 25px;
/* background-color: #eee; */
margin-right:20px;
border:2px solid var(--green-light)!important;
border-radius: 5px;
transition: transform .3s ease-in-out;
}

/* On mouse-over, add a grey background color */
.checkbox-container:hover input ~ .checkmark {
background-color: rgb(228, 246, 247);
transform:scale(1.2	);
}

/* When the checkbox is checked, add a blue background */
.checkbox-container input:checked ~ .checkmark {
background-color: var(--green-light);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
content: "";
position: absolute;
display: none;
}

/* Show the checkmark when checked */
.checkbox-container input:checked ~ .checkmark:after {
display: block;
}

/* Style the checkmark/indicator */
.checkbox-container .checkmark:after {
left: 9px;
top: 5px;
width: 5px;
height: 10px;
border: solid white;
border-width: 0 3px 3px 0;
-webkit-transform: rotate(45deg);
-ms-transform: rotate(45deg);
transform: rotate(45deg);
}
